<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="14.0">
  <PropertyGroup>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectVersion>7.0</ProjectVersion>
    <ToolchainName>com.Atmel.ARMGCC.C</ToolchainName>
    <ProjectGuid>dce6c7e3-ee26-4d79-826b-08594b9ad897</ProjectGuid>
    <avrdevice>ATSAMD51J20A</avrdevice>
    <avrdeviceseries>none</avrdeviceseries>
    <OutputType>Executable</OutputType>
    <Language>C</Language>
    <OutputFileName>$(MSBuildProjectName)</OutputFileName>
    <OutputFileExtension>.elf</OutputFileExtension>
    <OutputDirectory>$(MSBuildProjectDirectory)\$(Configuration)</OutputDirectory>
    <AssemblyName>cerebellum</AssemblyName>
    <Name>cerebellum</Name>
    <RootNamespace>cerebellum</RootNamespace>
    <ToolchainFlavour>Native</ToolchainFlavour>
    <KeepTimersRunning>true</KeepTimersRunning>
    <OverrideVtor>false</OverrideVtor>
    <CacheFlash>true</CacheFlash>
    <ProgFlashFromRam>true</ProgFlashFromRam>
    <RamSnippetAddress />
    <UncachedRange />
    <preserveEEPROM>true</preserveEEPROM>
    <OverrideVtorValue />
    <BootSegment>2</BootSegment>
    <ResetRule>0</ResetRule>
    <eraseonlaunchrule>0</eraseonlaunchrule>
    <EraseKey />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <ToolchainSettings>
      <ArmGcc>
  <armgcc.common.outputfiles.hex>True</armgcc.common.outputfiles.hex>
  <armgcc.common.outputfiles.lss>True</armgcc.common.outputfiles.lss>
  <armgcc.common.outputfiles.eep>True</armgcc.common.outputfiles.eep>
  <armgcc.common.outputfiles.bin>True</armgcc.common.outputfiles.bin>
  <armgcc.common.outputfiles.srec>True</armgcc.common.outputfiles.srec>
  <armgcc.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>NDEBUG</Value>
    </ListValues>
  </armgcc.compiler.symbols.DefSymbols>
  <armgcc.compiler.directories.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
      <Value>../../include</Value>
      <Value>../include</Value>
    </ListValues>
  </armgcc.compiler.directories.IncludePaths>
  <armgcc.compiler.optimization.level>Optimize for size (-Os)</armgcc.compiler.optimization.level>
  <armgcc.compiler.optimization.PrepareFunctionsForGarbageCollection>True</armgcc.compiler.optimization.PrepareFunctionsForGarbageCollection>
  <armgcc.compiler.warnings.AllWarnings>True</armgcc.compiler.warnings.AllWarnings>
  <armgcc.linker.libraries.Libraries>
    <ListValues>
      <Value>libm</Value>
      <Value>libsamd51.a</Value>
      <Value>lib4legs.a</Value>
      <Value>libconsole.a</Value>
    </ListValues>
  </armgcc.linker.libraries.Libraries>
  <armgcc.linker.libraries.LibrarySearchPaths>
    <ListValues>
      <Value>%24(ProjectDir)\Device_Startup</Value>
      <Value>../../lib</Value>
    </ListValues>
  </armgcc.linker.libraries.LibrarySearchPaths>
  <armgcc.linker.optimization.GarbageCollectUnusedSections>True</armgcc.linker.optimization.GarbageCollectUnusedSections>
  <armgcc.linker.memorysettings.ExternalRAM>False</armgcc.linker.memorysettings.ExternalRAM>
  <armgcc.linker.miscellaneous.LinkerFlags>-Tsamd51j20a_flash.ld</armgcc.linker.miscellaneous.LinkerFlags>
  <armgcc.linker.miscellaneous.OtherObjects>
    <ListValues>
      <Value>C:\cygwin64\home\kiyot\src\4legs\src\4legs\cerebellum\Release\spine.o</Value>
    </ListValues>
  </armgcc.linker.miscellaneous.OtherObjects>
  <armgcc.assembler.general.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
    </ListValues>
  </armgcc.assembler.general.IncludePaths>
  <armgcc.preprocessingassembler.general.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
    </ListValues>
  </armgcc.preprocessingassembler.general.IncludePaths>
</ArmGcc>
    </ToolchainSettings>
    <PostBuildEvent>"$(ToolchainDir)\arm-none-eabi-objcopy.exe" -O binary "$(OutputDirectory)\$(OutputFileName)$(OutputFileExtension)" "$(OutputDirectory)\$(OutputFileName).bin"
copy "$(OutputDirectory)\$(OutputFileName).bin"  $(OutputDirectory)\..\..\bin\</PostBuildEvent>
    <PreBuildEvent>copy $(OutputDirectory)\..\..\bin\spine.bin .
"$(ToolchainDir)\arm-none-eabi-objcopy.exe" -I binary -O elf32-littlearm -B arm --rename-section .data=.rodata spine.bin spine.o</PreBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <ToolchainSettings>
      <ArmGcc>
  <armgcc.common.outputfiles.hex>True</armgcc.common.outputfiles.hex>
  <armgcc.common.outputfiles.lss>True</armgcc.common.outputfiles.lss>
  <armgcc.common.outputfiles.eep>True</armgcc.common.outputfiles.eep>
  <armgcc.common.outputfiles.bin>True</armgcc.common.outputfiles.bin>
  <armgcc.common.outputfiles.srec>True</armgcc.common.outputfiles.srec>
  <armgcc.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>DEBUG</Value>
    </ListValues>
  </armgcc.compiler.symbols.DefSymbols>
  <armgcc.compiler.directories.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
      <Value>../../include</Value>
      <Value>../include</Value>
    </ListValues>
  </armgcc.compiler.directories.IncludePaths>
  <armgcc.compiler.optimization.level>Optimize (-O1)</armgcc.compiler.optimization.level>
  <armgcc.compiler.optimization.PrepareFunctionsForGarbageCollection>True</armgcc.compiler.optimization.PrepareFunctionsForGarbageCollection>
  <armgcc.compiler.optimization.DebugLevel>Maximum (-g3)</armgcc.compiler.optimization.DebugLevel>
  <armgcc.compiler.warnings.AllWarnings>True</armgcc.compiler.warnings.AllWarnings>
  <armgcc.linker.libraries.Libraries>
    <ListValues>
      <Value>libm</Value>
      <Value>libsamd51.a</Value>
      <Value>lib4legs.a</Value>
      <Value>libconsole.a</Value>
    </ListValues>
  </armgcc.linker.libraries.Libraries>
  <armgcc.linker.libraries.LibrarySearchPaths>
    <ListValues>
      <Value>%24(ProjectDir)\Device_Startup</Value>
      <Value>../../lib</Value>
    </ListValues>
  </armgcc.linker.libraries.LibrarySearchPaths>
  <armgcc.linker.optimization.GarbageCollectUnusedSections>True</armgcc.linker.optimization.GarbageCollectUnusedSections>
  <armgcc.linker.memorysettings.ExternalRAM>False</armgcc.linker.memorysettings.ExternalRAM>
  <armgcc.linker.miscellaneous.LinkerFlags>-Tsamd51j20a_flash.ld</armgcc.linker.miscellaneous.LinkerFlags>
  <armgcc.linker.miscellaneous.OtherObjects>
    <ListValues>
      <Value>C:\cygwin64\home\kiyot\src\4legs\src\4legs\cerebellum\Debug\spine.o</Value>
    </ListValues>
  </armgcc.linker.miscellaneous.OtherObjects>
  <armgcc.assembler.general.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
    </ListValues>
  </armgcc.assembler.general.IncludePaths>
  <armgcc.assembler.debugging.DebugLevel>Default (-g)</armgcc.assembler.debugging.DebugLevel>
  <armgcc.preprocessingassembler.general.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
    </ListValues>
  </armgcc.preprocessingassembler.general.IncludePaths>
  <armgcc.preprocessingassembler.debugging.DebugLevel>Default (-Wa,-g)</armgcc.preprocessingassembler.debugging.DebugLevel>
</ArmGcc>
    </ToolchainSettings>
    <PostBuildEvent>"$(ToolchainDir)\arm-none-eabi-objcopy.exe" -O binary "$(OutputDirectory)\$(OutputFileName)$(OutputFileExtension)" "$(OutputDirectory)\$(OutputFileName).bin"
copy "$(OutputDirectory)\$(OutputFileName).bin"  $(OutputDirectory)\..\..\bin\</PostBuildEvent>
    <PreBuildEvent>copy $(OutputDirectory)\..\..\bin\spine.bin .
"$(ToolchainDir)\arm-none-eabi-objcopy.exe" -I binary -O elf32-littlearm -B arm --rename-section .data=.rodata spine.bin spine.o</PreBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release_Finfer' ">
    <ToolchainSettings>
      <ArmGcc>
  <armgcc.common.outputfiles.hex>True</armgcc.common.outputfiles.hex>
  <armgcc.common.outputfiles.lss>True</armgcc.common.outputfiles.lss>
  <armgcc.common.outputfiles.eep>True</armgcc.common.outputfiles.eep>
  <armgcc.common.outputfiles.bin>True</armgcc.common.outputfiles.bin>
  <armgcc.common.outputfiles.srec>True</armgcc.common.outputfiles.srec>
  <armgcc.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>NDEBUG</Value>
    </ListValues>
  </armgcc.compiler.symbols.DefSymbols>
  <armgcc.compiler.directories.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
      <Value>../../include</Value>
      <Value>../include</Value>
    </ListValues>
  </armgcc.compiler.directories.IncludePaths>
  <armgcc.compiler.optimization.level>Optimize for size (-Os)</armgcc.compiler.optimization.level>
  <armgcc.compiler.optimization.PrepareFunctionsForGarbageCollection>True</armgcc.compiler.optimization.PrepareFunctionsForGarbageCollection>
  <armgcc.compiler.warnings.AllWarnings>True</armgcc.compiler.warnings.AllWarnings>
  <armgcc.linker.libraries.Libraries>
    <ListValues>
      <Value>libm</Value>
      <Value>libsamd51.a</Value>
      <Value>lib4legs.a</Value>
      <Value>libconsole.a</Value>
    </ListValues>
  </armgcc.linker.libraries.Libraries>
  <armgcc.linker.libraries.LibrarySearchPaths>
    <ListValues>
      <Value>%24(ProjectDir)\Device_Startup</Value>
      <Value>../../lib</Value>
    </ListValues>
  </armgcc.linker.libraries.LibrarySearchPaths>
  <armgcc.linker.optimization.GarbageCollectUnusedSections>True</armgcc.linker.optimization.GarbageCollectUnusedSections>
  <armgcc.linker.memorysettings.ExternalRAM>False</armgcc.linker.memorysettings.ExternalRAM>
  <armgcc.linker.miscellaneous.LinkerFlags>-Tsamd51j20a_flash.ld</armgcc.linker.miscellaneous.LinkerFlags>
  <armgcc.linker.miscellaneous.OtherObjects>
    <ListValues>
      <Value>C:\cygwin64\home\kiyot\src\4legs\src\4legs\cerebellum\Release\spine.o</Value>
    </ListValues>
  </armgcc.linker.miscellaneous.OtherObjects>
  <armgcc.assembler.general.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
    </ListValues>
  </armgcc.assembler.general.IncludePaths>
  <armgcc.preprocessingassembler.general.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
    </ListValues>
  </armgcc.preprocessingassembler.general.IncludePaths>
</ArmGcc>
    </ToolchainSettings>
    <PostBuildEvent>"$(ToolchainDir)\arm-none-eabi-objcopy.exe" -O binary "$(OutputDirectory)\$(OutputFileName)$(OutputFileExtension)" "$(OutputDirectory)\$(OutputFileName).bin"
copy "$(OutputDirectory)\$(OutputFileName).bin"  $(OutputDirectory)\..\..\bin\</PostBuildEvent>
    <PreBuildEvent>copy $(OutputDirectory)\..\..\bin\spine.bin .
"$(ToolchainDir)\arm-none-eabi-objcopy.exe" -I binary -O elf32-littlearm -B arm --rename-section .data=.rodata spine.bin spine.o</PreBuildEvent>
    <OutputPath>bin\Release_Finfer\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release_Arm' ">
    <ToolchainSettings>
      <ArmGcc>
  <armgcc.common.outputfiles.hex>True</armgcc.common.outputfiles.hex>
  <armgcc.common.outputfiles.lss>True</armgcc.common.outputfiles.lss>
  <armgcc.common.outputfiles.eep>True</armgcc.common.outputfiles.eep>
  <armgcc.common.outputfiles.bin>True</armgcc.common.outputfiles.bin>
  <armgcc.common.outputfiles.srec>True</armgcc.common.outputfiles.srec>
  <armgcc.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>NDEBUG</Value>
    </ListValues>
  </armgcc.compiler.symbols.DefSymbols>
  <armgcc.compiler.directories.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
      <Value>../../include</Value>
      <Value>../include</Value>
    </ListValues>
  </armgcc.compiler.directories.IncludePaths>
  <armgcc.compiler.optimization.level>Optimize for size (-Os)</armgcc.compiler.optimization.level>
  <armgcc.compiler.optimization.PrepareFunctionsForGarbageCollection>True</armgcc.compiler.optimization.PrepareFunctionsForGarbageCollection>
  <armgcc.compiler.warnings.AllWarnings>True</armgcc.compiler.warnings.AllWarnings>
  <armgcc.linker.libraries.Libraries>
    <ListValues>
      <Value>libm</Value>
      <Value>libsamd51.a</Value>
      <Value>lib4legs.a</Value>
      <Value>libconsole.a</Value>
    </ListValues>
  </armgcc.linker.libraries.Libraries>
  <armgcc.linker.libraries.LibrarySearchPaths>
    <ListValues>
      <Value>%24(ProjectDir)\Device_Startup</Value>
      <Value>../../lib</Value>
    </ListValues>
  </armgcc.linker.libraries.LibrarySearchPaths>
  <armgcc.linker.optimization.GarbageCollectUnusedSections>True</armgcc.linker.optimization.GarbageCollectUnusedSections>
  <armgcc.linker.memorysettings.ExternalRAM>False</armgcc.linker.memorysettings.ExternalRAM>
  <armgcc.linker.miscellaneous.LinkerFlags>-Tsamd51j20a_flash.ld</armgcc.linker.miscellaneous.LinkerFlags>
  <armgcc.linker.miscellaneous.OtherObjects>
    <ListValues>
      <Value>C:\cygwin64\home\kiyot\src\4legs\src\4legs\cerebellum\Release\spine.o</Value>
    </ListValues>
  </armgcc.linker.miscellaneous.OtherObjects>
  <armgcc.assembler.general.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
    </ListValues>
  </armgcc.assembler.general.IncludePaths>
  <armgcc.preprocessingassembler.general.IncludePaths>
    <ListValues>
      <Value>%24(PackRepoDir)\ARM\CMSIS\5.4.0\CMSIS\Core\Include\</Value>
      <Value>%24(PackRepoDir)\Atmel\SAMD51_DFP\1.2.139\samd51a\include</Value>
    </ListValues>
  </armgcc.preprocessingassembler.general.IncludePaths>
</ArmGcc>
    </ToolchainSettings>
    <PostBuildEvent>"$(ToolchainDir)\arm-none-eabi-objcopy.exe" -O binary "$(OutputDirectory)\$(OutputFileName)$(OutputFileExtension)" "$(OutputDirectory)\$(OutputFileName).bin"
copy "$(OutputDirectory)\$(OutputFileName).bin"  $(OutputDirectory)\..\..\bin\</PostBuildEvent>
    <PreBuildEvent>copy $(OutputDirectory)\..\..\bin\spine.bin .
"$(ToolchainDir)\arm-none-eabi-objcopy.exe" -I binary -O elf32-littlearm -B arm --rename-section .data=.rodata spine.bin spine.o</PreBuildEvent>
    <OutputPath>bin\Release_Arm\</OutputPath>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="cmd.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="Device_Startup\startup_samd51.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="Device_Startup\syscall.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="Device_Startup\system_samd51.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="include\cmd.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="include\posture.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="include\spine_controller.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="main.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="posture.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="spine_controller.c">
      <SubType>compile</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Device_Startup\" />
    <Folder Include="include" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Device_Startup\samd51j20a_flash.ld">
      <SubType>compile</SubType>
    </None>
    <None Include="Device_Startup\samd51j20a_sram.ld">
      <SubType>compile</SubType>
    </None>
  </ItemGroup>
  <Import Project="$(AVRSTUDIO_EXE_PATH)\\Vs\\Compiler.targets" />
</Project>